name: Deploy Doxygen Documentation with GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Install Doxygen (assuming it's available in the default repositories)
      - name: Install Doxygen
        run: sudo apt-get update && sudo apt-get install -y doxygen
      
      # Generate Doxygen documentation
      - name: Generate Doxygen Documentation
        run: doxygen ./Doxyfile

      # Upload Doxygen artifact
      - name: Upload Doxygen Artifact
        uses: actions/upload-artifact@v2
        with:
          name: doxygen-docs
          path: ./doc/html  # Adjust this path if your Doxygen generates output to a different directory

 # Deployment job
deploy:
  environment:
    name: github-pages
    url: ${{ steps.deploy.outputs.url }}
  runs-on: ubuntu-latest
  needs: build
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Download Doxygen artifact
    - name: Download Doxygen Artifact
      uses: actions/download-artifact@v2
      with:
        name: doxygen-docs
        path: ./doc/html  # Adjust this path if your Doxygen generates output to a different directory

    # Deploy to GitHub Pages using personal access token
    - name: Deploy to GitHub Pages
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Use your personal access token here
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

        mkdir -p tmp
        mv ./doc/html/* tmp/
        git checkout main
        git fetch
        git reset --hard origin/main
        rm -rf ./doc/html
        mv tmp ./doc/html
        git add ./doc/html
        git commit -m "Deploy updated documentation"
        git push origin main
